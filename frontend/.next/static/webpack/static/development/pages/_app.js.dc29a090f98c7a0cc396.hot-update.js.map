{"version":3,"file":"static/webpack/static/development/pages/_app.js.dc29a090f98c7a0cc396.hot-update.js","sources":["webpack:///./components/Search.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Downshift from \"downshift\";\nimport Router from \"next/router\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\n\nconst SEARCH_ITEMS_QUERY = gql`\n  query SEARCH_ITEMS_QUERY($searchTerm: String!) {\n    items(\n      where: {\n        OR: [\n          { title_contains: $searchTerm }\n          { description_contains: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      image\n      title\n    }\n  }\n`;\nclass AutoComplete extends Component {\n  state = {\n    items: [],\n    loading: false\n  };\n\n  onChange = debounce(async (e, client) => {\n    this.setState({ loading: true });\n    const res = await client.query({\n      query: SEARCH_ITEMS_QUERY,\n      variables: { searchTerm: e.target.value }\n    });\n    this.setState({\n      items: res.data.items,\n      loading: false\n    });\n  }, 350);\n  render() {\n    return (\n      <SearchStyles>\n        <Downshift>\n          {({\n            getInputProps,\n            getItemProps,\n            isOpen,\n            inputValue,\n            highlightedIndex\n          }) => (\n            <div>\n              <ApolloConsumer>\n                {client => (\n                  <input\n                    {...getInputProps({\n                      type: \"search\",\n                      placeholder: \"Search for an item\",\n                      id: \"search\",\n                      className: this.state.loading ? \"loading\" : \"\",\n                      onChange: e => {\n                        e.persist();\n                        this.onChange(e, client);\n                      }\n                    })}\n                  />\n                )}\n              </ApolloConsumer>\n              <DropDown>\n                {this.state.items.map(item => (\n                  <DropDownItem key={item.id}>\n                    <img width=\"50\" src={item.image} alt={item.title} />\n                    {item.title}\n                  </DropDownItem>\n                ))}\n              </DropDown>\n            </div>\n          )}\n        </Downshift>\n      </SearchStyles>\n    );\n  }\n}\n\nexport default AutoComplete;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAeA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AACA;AAHA;AAEA;AACA;AAGA;AACA;AACA;AAFA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AARA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAzBA;AAqCA;;;;AA1DA;AACA;AA4DA;;;;A","sourceRoot":""}